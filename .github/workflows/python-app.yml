# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
    - name: Checkout
      uses: actions/checkout@master
    - name: Build and Deploy
      uses: JacksonMaxfield/github-pages-deploy-action-python@master
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BASE_BRANCH: master # The branch the action should deploy from.
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: docs/_build/html # The folder the action should deploy. This example folder is generated by Sphinx
        BUILD_SCRIPT: pip install .[all] && make docs-build && touch docs/_build/html/.nojekyll # The build script the action should run prior to deploying.
    - name: Run application
      env:
        # FLASK_DEBUG: ${{ secrets.FLASK_DEBUG }}
        # PORT: ${{ secrets.PORT }}
        # HOST: ${{ secrets.HOST }}
        # API_KEY_OCR: ${{ secrets.API_KEY_OCR }}
        FLASK_DEBUG: False
        PORT: 5000
        HOST: "0.0.0.0"
        API_KEY_OCR: "4de29dc0-f625-4e3b-9ec4-2ef6582f5732"
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        export FLASK_APP=main.py
        export FLASK_ENV=development
        python main.py
